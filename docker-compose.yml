services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: personal-assistant-hub-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Homepage Application
  homepage:
    build:
      context: .
      dockerfile: ./docker/homepage/Dockerfile
    container_name: personal-assistant-hub-homepage
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - VITE_API_URL=${API_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./apps/homepage:/app/apps/homepage:ro
      - ./packages:/app/packages:ro
      - /app/node_modules

  # API Application
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    container_name: personal-assistant-hub-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - FRONTEND_URL=http://homepage:3000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./apps/api:/app/apps/api:ro
      - ./packages:/app/packages:ro
      - /app/node_modules

  # Storybook UI Documentation
  storybook:
    build:
      context: .
      dockerfile: ./docker/storybook/Dockerfile
    container_name: personal-assistant-hub-storybook
    restart: unless-stopped
    ports:
      - "6006:6006"
    networks:
      - app-network
    volumes:
      - ./packages/ui:/app/packages/ui:ro
      - /app/node_modules



volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge